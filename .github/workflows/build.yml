name: CI with Gradle

on:
  push:
    branches: [ "releas" ]
#  pull_request:
#    branches: [ "master" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        
      ## 1) git ignore에 등록된 application.properties 파일 생성해주기
    - name: make application.yaml
      run: |
        cd ./src/main/resources
        touch ./application.yaml
        echo "${{ secrets.PROPERTIES }}" > ./application.yaml
      shell: bash
      
      ## 2) 스프링 프로젝트 jar 파일 빌드
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Build with Gradle
      run: ./gradlew build
      
#       ## 3) Docker Hub에 이미지 push 하기
#     - name: Docker build
#       run: |
#         docker login -u ${{ secrets.USERNAME }} -p ${{ secrets.PASSWORD }}
#         docker build -t mung-friend .
#         docker tag mung-friend souliat/mung-friend:${GITHUB_SHA::7}
#         docker push souliat/mung-friend:${GITHUB_SHA::7}
        
#       ## 4) Docker Hub에 Push한 이미지를 리눅스 서버에 받아와서 run
#     - name: Deploy
#       uses: appleboy/ssh-action@master
#       with:
#         host: ec2-3-39-6-175.ap-northeast-2.compute.amazonaws.com
#         username: ec2-user
#         key: ${{ secrets.PRIVATE_KEY }}
#         envs: GITHUB_SHA
#         script: |
#           docker pull souliat/mung-friend:${GITHUB_SHA::7}
#           docker tag souliat/mung-friend:${GITHUB_SHA::7} mung-friend
#           docker stop server
#           docker run -d --rm --name server -p 80:8080 mung-friend
